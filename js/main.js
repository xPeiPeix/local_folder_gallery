// ‰∏ªÂ∫îÁî®Á±ª
class LocalFolderGallery {
    constructor() {
        // ÂàùÂßãÂåñÊ®°Âùó
        this.fileScanner = new FileScanner();
        this.imageViewer = new ImageViewer();
        this.exportManager = new ExportManager();
        
        // Êï∞ÊçÆÁä∂ÊÄÅ
        this.allImages = [];
        this.filteredImages = [];
        this.currentSortBy = 'name';
        this.currentSortOrder = 'asc';
        this.currentTypeFilter = 'all';
        this.currentSearchTerm = '';
        this.isIncrementalLoading = false;
        
        // UIÂÖÉÁ¥†
        this.initUIElements();
        this.bindEvents();
        this.setupCallbacks();
        
        // ÂêØÁî®ÂõæÁâáÊü•ÁúãÂô®Áº©ÊîæÂäüËÉΩ
        this.imageViewer.enableZoom();
        
        // ÂàùÂßãÂåñÂÜÖÂ≠òÁõëÊéß
        this.initMemoryMonitor();
    }

    // ÂàùÂßãÂåñUIÂÖÉÁ¥†
    initUIElements() {
        this.folderInput = document.getElementById('folderInput');
        this.loadingIndicator = document.getElementById('loadingIndicator');
        this.imageGrid = document.getElementById('imageGrid');
        this.imageCount = document.getElementById('imageCount');
        this.selectedCount = document.getElementById('selectedCount');
        this.fileStats = document.getElementById('fileStats');
        this.selectAllBtn = document.getElementById('selectAllBtn');
        this.deselectAllBtn = document.getElementById('deselectAllBtn');
        this.exportBtn = document.getElementById('exportBtn');
        this.sortSelect = document.getElementById('sortSelect');
        this.typeFilter = document.getElementById('typeFilter');
        this.searchInput = document.getElementById('searchInput');
    }

    // ÁªëÂÆö‰∫ã‰ª∂
    bindEvents() {
        // Êñá‰ª∂Â§πÈÄâÊã©
        this.folderInput.addEventListener('change', (e) => {
            // Â¶ÇÊûúÂõæÁâáÊü•ÁúãÂô®Ê≠£Âú®ÊòæÁ§∫ÔºåÂàôÂøΩÁï•Êñá‰ª∂Â§πÈÄâÊã©‰∫ã‰ª∂
            if (this.imageViewer && this.imageViewer.isOpen) {
                console.log('üê± nya~ ÂõæÁâáÊü•ÁúãÂô®ÊâìÂºÄ‰∏≠ÔºåÂøΩÁï•Êñá‰ª∂Â§πÈÄâÊã©‰∫ã‰ª∂');
                return;
            }
            this.handleFolderSelection(e.target.files);
        });

        // ÊâπÈáèÊìç‰Ωú
        this.selectAllBtn.addEventListener('click', () => {
            this.exportManager.selectAll(this.filteredImages);
        });

        this.deselectAllBtn.addEventListener('click', () => {
            this.exportManager.deselectAll(this.filteredImages);
        });

        this.exportBtn.addEventListener('click', () => {
            this.exportManager.exportSelectedImages(this.allImages);
        });

        // ÊéíÂ∫èÂíåÁ≠õÈÄâ
        this.sortSelect.addEventListener('change', (e) => {
            this.currentSortBy = e.target.value;
            this.applySortAndFilter();
        });

        this.typeFilter.addEventListener('change', (e) => {
            this.currentTypeFilter = e.target.value;
            this.applySortAndFilter();
        });

        // ÊêúÁ¥¢
        this.searchInput.addEventListener('input', (e) => {
            this.currentSearchTerm = e.target.value.trim();
            this.debounceSearch();
        });

        // ÊãñÊãΩÊñá‰ª∂Â§πÊîØÊåÅ
        this.setupDragAndDrop();
    }

    // ËÆæÁΩÆÂõûË∞ÉÂáΩÊï∞
    setupCallbacks() {
        // Êñá‰ª∂Êâ´ÊèèËøõÂ∫¶ÂõûË∞É
        this.fileScanner.setProgressCallback((current, total, stats) => {
            this.updateLoadingProgress(current, total, stats);
        });

        // Êñá‰ª∂Êâ´ÊèèÂÆåÊàêÂõûË∞É
        this.fileScanner.setCompleteCallback((images) => {
            this.handleScanComplete(images);
        });

        // Â¢ûÈáèÂä†ËΩΩÂõûË∞É
        this.fileScanner.setIncrementalCallback((newImages, processed, total) => {
            this.handleIncrementalUpdate(newImages, processed, total);
        });

        // ÈÄâÊã©Áä∂ÊÄÅÊîπÂèòÂõûË∞É
        this.exportManager.setSelectionChangeCallback((selectedCount) => {
            this.updateSelectedCount(selectedCount);
        });

        // ÁõëÂê¨ÂõæÁâáÊü•ÁúãÂô®‰∏≠ÁöÑÈÄâÊã©Áä∂ÊÄÅÊîπÂèò
        document.addEventListener('imageSelectionChanged', (e) => {
            const changedImage = e.detail.image;
            this.updateImageItemUI(changedImage);
        });
    }

    // Â§ÑÁêÜÊñá‰ª∂Â§πÈÄâÊã©
    async handleFolderSelection(files) {
        if (!files || files.length === 0) return;

        // ÊòæÁ§∫Âä†ËΩΩÊåáÁ§∫Âô®
        this.showLoading(true);
        
        // Ê∏ÖÁ©∫‰πãÂâçÁöÑÊï∞ÊçÆ
        this.clearPreviousData();

        // Ê†áËÆ∞ÂºÄÂßãÂ¢ûÈáèÂä†ËΩΩ
        this.isIncrementalLoading = true;

        try {
            // Êâ´ÊèèÊñá‰ª∂Â§π
            await this.fileScanner.scanFolder(files);
        } catch (error) {
            console.error('Êâ´ÊèèÊñá‰ª∂Â§πÂ§±Ë¥•:', error);
            this.showMessage('Êâ´ÊèèÊñá‰ª∂Â§πÂ§±Ë¥•: ' + error.message, 'error');
            this.showLoading(false);
            this.isIncrementalLoading = false;
        }
    }

    // Â§ÑÁêÜÂ¢ûÈáèÊõ¥Êñ∞
    handleIncrementalUpdate(newImages, processed, total) {
        // Â∞ÜÊñ∞ÂõæÁâáÊ∑ªÂä†Âà∞ÂÖ®ÈÉ®ÂõæÁâáÊï∞ÁªÑ
        this.allImages = [...this.allImages, ...newImages];
        
        // Á≠õÈÄâÊñ∞ÂõæÁâáÔºàÂ∫îÁî®ÂΩìÂâçÁöÑÊêúÁ¥¢ÂíåÁ≠õÈÄâÊù°‰ª∂Ôºâ
        const filteredNewImages = newImages.filter(img => {
            // ÂêçÁß∞Á≠õÈÄâ
            const nameMatch = this.currentSearchTerm === '' || 
                             img.name.toLowerCase().includes(this.currentSearchTerm.toLowerCase());
            
            // Á±ªÂûãÁ≠õÈÄâ
            let typeMatch = true;
            if (this.currentTypeFilter !== 'all') {
                const imgType = img.type.split('/')[1] || '';
                typeMatch = imgType.toLowerCase().includes(this.currentTypeFilter.toLowerCase());
            }

            return nameMatch && typeMatch;
        });

        // Êõ¥Êñ∞Á≠õÈÄâÊï∞ÁªÑ
        this.filteredImages = [...this.filteredImages, ...filteredNewImages];
        
        // Êõ¥Êñ∞ËÆ°Êï∞
        this.updateImageCount(this.allImages.length);
        this.updateLoadingProgress(processed, total);
        
        // Â¶ÇÊûúÊòØÁ¨¨‰∏ÄÊâπÔºåÊõ¥Êñ∞Êñá‰ª∂ÁªüËÆ°‰ø°ÊÅØ
        if (this.allImages.length === newImages.length && this.fileScanner.fileStatistics) {
            this.updateFileStats(this.fileScanner.fileStatistics);
        }
        
        // Â¢ûÈáèÊ∑ªÂä†Á¨¶ÂêàÁ≠õÈÄâÊù°‰ª∂ÁöÑÂõæÁâáÂà∞ÁΩëÊ†º
        if (filteredNewImages.length > 0) {
            this.appendImagesToGrid(filteredNewImages);
        }
        
        // Â¶ÇÊûúËøôÊòØÁ¨¨‰∏ÄÊâπÂõæÁâáÔºåÁªôÁî®Êà∑‰∏Ä‰∏™ÊèêÁ§∫
        if (this.allImages.length === newImages.length && newImages.length > 0) {
            this.showMessage('ÂºÄÂßãÂä†ËΩΩÂõæÁâáÔºåÂèØ‰ª•Á´ãÂç≥ÊµèËßàÂ∑≤Âä†ËΩΩÁöÑÂÜÖÂÆπÔºÅ', 'info');
        }
    }

    // Â§ÑÁêÜÊâ´ÊèèÂÆåÊàê
    handleScanComplete(images) {
        // Ê∏ÖÈô§Â¢ûÈáèÂä†ËΩΩÊ†áËÆ∞
        this.isIncrementalLoading = false;
        
        // ÊúÄÁªàÁöÑÂõæÁâáÊï∞ÁªÑÂ∑≤ÁªèÈÄöËøáÂ¢ûÈáèÊõ¥Êñ∞Âª∫Á´ãÂ•Ω‰∫Ü
        this.updateImageCount(this.allImages.length);
        
        // ÈöêËóèÂä†ËΩΩÊåáÁ§∫Âô®
        this.showLoading(false);
        
        if (this.allImages.length === 0) {
            this.showEmptyState();
        } else {
            // Ëé∑ÂèñÂÜÖÂ≠ò‰ΩøÁî®‰ø°ÊÅØ
            const memoryInfo = this.fileScanner.getMemoryUsageEstimate();
            this.showMessage(
                `ÊàêÂäüÂä†ËΩΩ ${this.allImages.length} Âº†ÂõæÁâá | ÂÜÖÂ≠òÂç†Áî®Á∫¶ ${memoryInfo.formatted.total}`, 
                'success'
            );
            
            // ÂÜÖÂ≠ò‰ΩøÁî®Ë≠¶Âëä
            if (memoryInfo.totalMemory > 200 * 1024 * 1024) { // Ë∂ÖËøá200MB
                this.showMessage(`‚ö†Ô∏è ÂÜÖÂ≠òÂç†Áî®ËæÉÈ´ò (${memoryInfo.formatted.total})ÔºåÂª∫ËÆÆÂàÜÊâπÂ§ÑÁêÜÂ§ßÊñá‰ª∂Â§π`, 'warning');
            }
            
            // ÂÆåÊàêÂêéÈáçÊñ∞Â∫îÁî®ÊéíÂ∫èÂíåÁ≠õÈÄâ
            this.applySortAndFilter();
        }
    }

    // Â∫îÁî®ÊéíÂ∫èÂíåÁ≠õÈÄâ
    applySortAndFilter() {
        if (this.allImages.length === 0) return;

        // Â¶ÇÊûúÊ≠£Âú®Â¢ûÈáèÂä†ËΩΩÔºåÂàô‰∏çËøõË°åÂÆåÂÖ®ÈáçÊ∏≤Êüì
        // Âõ†‰∏∫Â¢ûÈáèÊõ¥Êñ∞Â∑≤ÁªèÂ§ÑÁêÜ‰∫ÜÁ≠õÈÄâÈÄªËæë
        if (this.isIncrementalLoading) {
            return;
        }

        // Á≠õÈÄâÂõæÁâá
        this.filteredImages = this.fileScanner.filterImages(
            this.currentSearchTerm, 
            this.currentTypeFilter
        );

        // ÊéíÂ∫èÂõæÁâá
        this.sortImages(this.filteredImages);

        // Ê∏≤ÊüìÂõæÁâáÁΩëÊ†º
        this.renderImageGrid(this.filteredImages);
        
        // Êõ¥Êñ∞ÁªüËÆ°‰ø°ÊÅØ
        this.updateFilteredCount(this.filteredImages.length);
    }

    // ÊéíÂ∫èÂõæÁâá
    sortImages(images) {
        images.sort((a, b) => {
            let valueA, valueB;
            
            switch (this.currentSortBy) {
                case 'name':
                    valueA = a.name.toLowerCase();
                    valueB = b.name.toLowerCase();
                    break;
                case 'size':
                    valueA = a.size;
                    valueB = b.size;
                    break;
                case 'date':
                    valueA = a.lastModified;
                    valueB = b.lastModified;
                    break;
                default:
                    valueA = a.name.toLowerCase();
                    valueB = b.name.toLowerCase();
            }

            if (valueA < valueB) return this.currentSortOrder === 'asc' ? -1 : 1;
            if (valueA > valueB) return this.currentSortOrder === 'asc' ? 1 : -1;
            return 0;
        });
    }

    // Ê∏≤ÊüìÂõæÁâáÁΩëÊ†º
    renderImageGrid(images) {
        this.imageGrid.innerHTML = '';

        if (images.length === 0) {
            this.showNoResultsState();
            return;
        }

        images.forEach((image, index) => {
            const imageItem = this.createImageItem(image, index);
            this.imageGrid.appendChild(imageItem);
        });
    }

    // Â¢ûÈáèÊ∑ªÂä†ÂõæÁâáÂà∞ÁΩëÊ†º
    appendImagesToGrid(newImages) {
        // Ê∏ÖÈô§ÂèØËÉΩÂ≠òÂú®ÁöÑÁ©∫Áä∂ÊÄÅÊèêÁ§∫
        const emptyState = this.imageGrid.querySelector('.empty-state');
        if (emptyState) {
            emptyState.remove();
        }

        // ËÆ°ÁÆóÊ≠£Á°ÆÁöÑÁ¥¢ÂºïÔºåÂü∫‰∫éÂΩìÂâçÁ≠õÈÄâÊï∞ÁªÑÁöÑÈïøÂ∫¶
        const startIndex = this.filteredImages.length - newImages.length;
        
        newImages.forEach((image, index) => {
            const correctIndex = startIndex + index;
            const imageItem = this.createImageItem(image, correctIndex);
            this.imageGrid.appendChild(imageItem);
            
            // Ê∑ªÂä†Ê∑°ÂÖ•Âä®ÁîªÊïàÊûú
            imageItem.style.opacity = '0';
            imageItem.style.transform = 'translateY(20px)';
            
            // Âª∂ËøüÊòæÁ§∫Âä®ÁîªÔºåÂàõÈÄ†ÊµÅÁïÖÁöÑÂä†ËΩΩÊïàÊûú
            setTimeout(() => {
                imageItem.style.transition = 'all 0.3s ease-out';
                imageItem.style.opacity = '1';
                imageItem.style.transform = 'translateY(0)';
            }, index * 50); // ÈîôÂºÄÂä®ÁîªÊó∂Èó¥
        });
    }

    // ÂàõÂª∫ÂõæÁâáÈ°πÁõÆ
    createImageItem(image, index) {
        const item = document.createElement('div');
        item.className = 'image-item';
        item.id = `item_${image.id}`;
        
        if (image.selected) {
            item.classList.add('selected');
        }

        item.innerHTML = `
            <input type="checkbox" 
                   class="image-item-checkbox" 
                   id="checkbox_${image.id}"
                   ${image.selected ? 'checked' : ''}>
            <img src="${image.thumbnail || image.url}" 
                 alt="${image.name}" 
                 loading="lazy"
                 onerror="this.src='${this.createPlaceholderImage()}'">
            <div class="image-item-info">
                <div class="image-item-name" title="${image.name}">${image.name}</div>
                <div class="image-item-details">
                    <span>${image.sizeFormatted}</span>
                    <span>${image.dimensions.width}√ó${image.dimensions.height}</span>
                </div>
            </div>
        `;

        // ÁªëÂÆö‰∫ã‰ª∂
        this.bindImageItemEvents(item, image, index);

        return item;
    }

    // ÁªëÂÆöÂõæÁâáÈ°πÁõÆ‰∫ã‰ª∂
    bindImageItemEvents(item, image, index) {
        const img = item.querySelector('img');
        const checkbox = item.querySelector('.image-item-checkbox');

        // ÂõæÁâáÁÇπÂáª - ÊâìÂºÄÊü•ÁúãÂô®
        img.addEventListener('click', () => {
            this.imageViewer.show(this.filteredImages, index);
        });

        // Â§çÈÄâÊ°ÜÂèòÂåñ
        checkbox.addEventListener('change', (e) => {
            this.exportManager.toggleImageSelection(image.id, this.allImages);
        });

        // Êï¥‰∏™È°πÁõÆÁÇπÂáªÈÄâÊã©ÔºàÈô§‰∫ÜÂõæÁâáÔºâ
        item.addEventListener('click', (e) => {
            if (e.target !== img && e.target !== checkbox) {
                checkbox.checked = !checkbox.checked;
                this.exportManager.toggleImageSelection(image.id, this.allImages);
            }
        });
    }

    // ËÆæÁΩÆÊãñÊãΩÊîØÊåÅ
    setupDragAndDrop() {
        const dropZone = document.body;

        ['dragenter', 'dragover', 'dragleave', 'drop'].forEach(eventName => {
            dropZone.addEventListener(eventName, (e) => {
                e.preventDefault();
                e.stopPropagation();
            });
        });

        ['dragenter', 'dragover'].forEach(eventName => {
            dropZone.addEventListener(eventName, () => {
                dropZone.classList.add('drag-highlight');
            });
        });

        ['dragleave', 'drop'].forEach(eventName => {
            dropZone.addEventListener(eventName, () => {
                dropZone.classList.remove('drag-highlight');
            });
        });

        dropZone.addEventListener('drop', (e) => {
            // Â¶ÇÊûúÂõæÁâáÊü•ÁúãÂô®Ê≠£Âú®ÊòæÁ§∫ÔºåÂàôÂøΩÁï•ÊãñÊãΩÊñá‰ª∂Â§π‰∫ã‰ª∂
            if (this.imageViewer && this.imageViewer.isOpen) {
                console.log('üê± nya~ ÂõæÁâáÊü•ÁúãÂô®ÊâìÂºÄ‰∏≠ÔºåÂøΩÁï•ÊãñÊãΩÊñá‰ª∂Â§π‰∫ã‰ª∂');
                return;
            }

            const files = Array.from(e.dataTransfer.files);
            
            if (files.length > 0) {
                // Ê®°ÊãüÊñá‰ª∂Â§πËæìÂÖ•
                this.folderInput.files = e.dataTransfer.files;
                this.handleFolderSelection(e.dataTransfer.files);
            }
        });
    }

    // Èò≤ÊäñÊêúÁ¥¢
    debounceSearch() {
        clearTimeout(this.searchTimeout);
        this.searchTimeout = setTimeout(() => {
            this.applySortAndFilter();
        }, 300);
    }

    // ÊòæÁ§∫/ÈöêËóèÂä†ËΩΩÊåáÁ§∫Âô®
    showLoading(show) {
        this.loadingIndicator.style.display = show ? 'block' : 'none';
    }

    // Êõ¥Êñ∞Âä†ËΩΩËøõÂ∫¶
    updateLoadingProgress(current, total, stats) {
        const progressText = this.loadingIndicator.querySelector('p');
        if (progressText && stats) {
            let message = `Ê≠£Âú®Êâ´ÊèèÊñá‰ª∂Â§π... `;
            
            if (current === 0) {
                // ÂàùÂßãÁªüËÆ°‰ø°ÊÅØ
                message += `ÂèëÁé∞ ${stats.imageFiles} Âº†ÂõæÁâá / ${stats.totalFiles} ‰∏™Êñá‰ª∂ (${stats.percentage}%)`;
                if (stats.nonImageFiles > 0) {
                    message += ` | Ë∑≥Ëøá ${stats.nonImageFiles} ‰∏™ÈùûÂõæÁâáÊñá‰ª∂`;
                }
            } else if (this.allImages.length > 0) {
                // Â¢ûÈáèÂä†ËΩΩ‰∏≠
                message += `Â∑≤Â§ÑÁêÜ ${this.allImages.length} Âº†ÂõæÁâá (${current}/${stats.imageFiles}) | ÂõæÁâáÂç†ÊØî ${stats.percentage}%`;
            } else {
                message += `(${current}/${total}) | ÂõæÁâáÊñá‰ª∂: ${stats.imageFiles} (${stats.percentage}%)`;
            }
            
            progressText.textContent = message;
        } else if (progressText) {
            // ÂÖºÂÆπÊóßÁâàÊú¨Ë∞ÉÁî®
            progressText.textContent = `Ê≠£Âú®Êâ´ÊèèÊñá‰ª∂Â§π... (${current}/${total})`;
        }
    }

    // Êõ¥Êñ∞ÂõæÁâáÊï∞Èáè
    updateImageCount(count) {
        this.imageCount.textContent = `Â∑≤Âä†ËΩΩ: ${count} Âº†ÂõæÁâá`;
    }

    // Êõ¥Êñ∞Á≠õÈÄâÂêéÊï∞Èáè
    updateFilteredCount(count) {
        if (count !== this.allImages.length) {
            this.imageCount.textContent = `Â∑≤Âä†ËΩΩ: ${this.allImages.length} Âº†ÂõæÁâá (ÊòæÁ§∫: ${count})`;
        }
    }

    // Êõ¥Êñ∞ÈÄâ‰∏≠Êï∞Èáè
    updateSelectedCount(count) {
        this.selectedCount.textContent = `Â∑≤ÈÄâÊã©: ${count} Âº†`;
        this.exportBtn.disabled = count === 0;
    }

    // Êõ¥Êñ∞Êñá‰ª∂ÁªüËÆ°‰ø°ÊÅØ
    updateFileStats(stats) {
        if (stats && this.fileStats) {
            this.fileStats.style.display = 'inline';
            this.fileStats.textContent = `ÂõæÁâáÂç†ÊØî: ${stats.percentage}% (${stats.imageFiles}/${stats.totalFiles})`;
            
            // Â¶ÇÊûúÊúâÈùûÂõæÁâáÊñá‰ª∂ÔºåÊ∑ªÂä†Âà∞Ê†áÈ¢òÊèêÁ§∫‰∏≠
            if (stats.nonImageFiles > 0) {
                this.fileStats.title = `ÂõæÁâáÊñá‰ª∂: ${stats.imageFiles} ‰∏™\nÈùûÂõæÁâáÊñá‰ª∂: ${stats.nonImageFiles} ‰∏™\nÊîØÊåÅÊ†ºÂºè: JPG, PNG, GIF, WebP`;
            } else {
                this.fileStats.title = `ÊâÄÊúâÊñá‰ª∂ÈÉΩÊòØÊîØÊåÅÁöÑÂõæÁâáÊ†ºÂºè\nÊîØÊåÅÊ†ºÂºè: JPG, PNG, GIF, WebP`;
            }
        }
    }

    // Êõ¥Êñ∞ÊåáÂÆöÂõæÁâáÈ°πÁöÑUIÁä∂ÊÄÅ
    updateImageItemUI(changedImage) {
        const imageItem = document.getElementById(`item_${changedImage.id}`);
        if (!imageItem) return;

        const checkbox = imageItem.querySelector(`#checkbox_${changedImage.id}`);
        if (checkbox) {
            checkbox.checked = changedImage.selected;
            
            // Êõ¥Êñ∞ËßÜËßâÁä∂ÊÄÅ
            if (changedImage.selected) {
                imageItem.classList.add('selected');
            } else {
                imageItem.classList.remove('selected');
            }
            
            console.log(`üê± nya~ ÂõæÁâáUIÁä∂ÊÄÅÂ∑≤ÂêåÊ≠•: ${changedImage.name} - ${changedImage.selected ? 'Â∑≤ÈÄâÊã©' : 'Êú™ÈÄâÊã©'}`);
        }
    }

    // Ê∏ÖÁ©∫‰πãÂâçÁöÑÊï∞ÊçÆ
    clearPreviousData() {
        // Ê∏ÖÁêÜÊñá‰ª∂Êâ´ÊèèÂô®
        this.fileScanner.cleanup();
        
        // Ê∏ÖÁ©∫Êï∞ÁªÑ
        this.allImages = [];
        this.filteredImages = [];
        
        // Ê∏ÖÁ©∫ÈÄâÊã©
        this.exportManager.clearSelection();
        
        // Ê∏ÖÁ©∫UI
        this.imageGrid.innerHTML = '';
        this.updateImageCount(0);
        this.updateSelectedCount(0);
        
        // ÈöêËóèÊñá‰ª∂ÁªüËÆ°
        if (this.fileStats) {
            this.fileStats.style.display = 'none';
        }
        
        // ÈáçÁΩÆÊêúÁ¥¢ÂíåÁ≠õÈÄâÁä∂ÊÄÅ
        this.searchInput.value = '';
        this.currentSearchTerm = '';
        this.currentTypeFilter = 'all';
        this.typeFilter.value = 'all';
        
        // ÈáçÁΩÆÂ¢ûÈáèÂä†ËΩΩÁä∂ÊÄÅ
        this.isIncrementalLoading = false;
    }

    // ÊòæÁ§∫Á©∫Áä∂ÊÄÅ
    showEmptyState() {
        this.imageGrid.innerHTML = `
            <div class="empty-state">
                <div class="empty-icon">üìÅ</div>
                <h3>Êú™ÊâæÂà∞ÂõæÁâáÊñá‰ª∂</h3>
                <p>ÊâÄÈÄâÊñá‰ª∂Â§π‰∏≠Ê≤°ÊúâÊâæÂà∞ÊîØÊåÅÁöÑÂõæÁâáÊ†ºÂºè</p>
                <p>ÊîØÊåÅÊ†ºÂºè: JPG, PNG, GIF, WebP</p>
            </div>
        `;
    }

    // ÊòæÁ§∫Êó†ÁªìÊûúÁä∂ÊÄÅ
    showNoResultsState() {
        this.imageGrid.innerHTML = `
            <div class="empty-state">
                <div class="empty-icon">üîç</div>
                <h3>Ê≤°ÊúâÂåπÈÖçÁöÑÁªìÊûú</h3>
                <p>Â∞ùËØïË∞ÉÊï¥ÊêúÁ¥¢Êù°‰ª∂ÊàñÁ≠õÈÄâÂô®</p>
            </div>
        `;
    }

    // ÂàõÂª∫Âç†‰ΩçÂõæÁâá
    createPlaceholderImage() {
        const canvas = document.createElement('canvas');
        const ctx = canvas.getContext('2d');
        
        canvas.width = 300;
        canvas.height = 200;
        
        // ÁªòÂà∂Âç†‰ΩçÂõæ
        ctx.fillStyle = '#f8f9fa';
        ctx.fillRect(0, 0, canvas.width, canvas.height);
        
        ctx.fillStyle = '#6c757d';
        ctx.font = '16px Arial';
        ctx.textAlign = 'center';
        ctx.fillText('ÂõæÁâáÂä†ËΩΩÂ§±Ë¥•', canvas.width / 2, canvas.height / 2);
        
        return canvas.toDataURL();
    }

    // ÊòæÁ§∫Ê∂àÊÅØ
    showMessage(message, type = 'info') {
        this.exportManager.showMessage(message, type);
    }

    // ÂºÄÂèëËÄÖÂ∑•ÂÖ∑ - ÂÜÖÂ≠òÁõëÊéß (Âú®ÊûÑÈÄ†ÂáΩÊï∞‰∏≠Ë∞ÉÁî®)
    initMemoryMonitor() {
        // ‰ªÖÂú®ÂºÄÂèëÁéØÂ¢ÉÊàñURLÂåÖÂê´debugÂèÇÊï∞Êó∂ÂêØÁî®
        const isDebugMode = window.location.search.includes('debug=true') || 
                           window.location.hostname === 'localhost';
        
        if (!isDebugMode) return;

        // Ê∑ªÂä†ÂÜÖÂ≠òÁõëÊéßÂø´Êç∑ÈîÆ Ctrl+M
        document.addEventListener('keydown', (e) => {
            if (e.ctrlKey && e.key === 'm') {
                e.preventDefault();
                this.showMemoryInfo();
            }
        });

        // ÂÆöÊúüÂÜÖÂ≠òÊ£ÄÊü• (ÊØè30Áßí)
        setInterval(() => {
            const memoryInfo = this.fileScanner.getMemoryUsageEstimate();
            if (memoryInfo.totalMemory > 300 * 1024 * 1024) { // Ë∂ÖËøá300MB
                console.warn('üê± nya~ ÂÜÖÂ≠ò‰ΩøÁî®Ë≠¶Âëä:', memoryInfo.formatted.total);
            }
        }, 30000);

        console.log('üê± nya~ ÂÜÖÂ≠òÁõëÊéßÂ∑≤ÂêØÁî®! Êåâ Ctrl+M Êü•ÁúãÂÜÖÂ≠ò‰ΩøÁî®ËØ¶ÊÉÖ');
    }

    // ÊòæÁ§∫ÂÜÖÂ≠ò‰ΩøÁî®ËØ¶ÊÉÖ
    showMemoryInfo() {
        const memoryInfo = this.fileScanner.getMemoryUsageEstimate();
        
        console.group('üê± nya~ ÂÜÖÂ≠ò‰ΩøÁî®ËØ¶ÊÉÖ');
        console.log('Áº©Áï•ÂõæÂÜÖÂ≠ò:', memoryInfo.formatted.thumbnail);
        console.log('ÂØπË±°ÂÜÖÂ≠ò:', memoryInfo.formatted.object);
        console.log('ÊÄªÂÜÖÂ≠ò:', memoryInfo.formatted.total);
        console.log('Áº©Áï•ÂõæÁºìÂ≠òÊï∞Èáè:', memoryInfo.thumbnailCount);
        console.log('ÂõæÁâáÂØπË±°Êï∞Èáè:', memoryInfo.imageCount);
        
        // ÊµèËßàÂô®ÂÜÖÂ≠òAPI (Â¶ÇÊûúÂèØÁî®)
        if (performance.memory) {
            const browserMemory = performance.memory;
            console.log('ÊµèËßàÂô®ÂÜÖÂ≠ò‰ΩøÁî®:', {
                used: Math.round(browserMemory.usedJSHeapSize / 1024 / 1024) + 'MB',
                total: Math.round(browserMemory.totalJSHeapSize / 1024 / 1024) + 'MB',
                limit: Math.round(browserMemory.jsHeapSizeLimit / 1024 / 1024) + 'MB'
            });
        }
        
        console.groupEnd();
        
        // Âú®UI‰∏≠ÊòæÁ§∫
        this.showMessage(
            `ÂÜÖÂ≠ò‰ΩøÁî®: ${memoryInfo.formatted.total} | ÁºìÂ≠ò: ${memoryInfo.thumbnailCount} Âº†`, 
            'info'
        );
    }
}

// Ê∑ªÂä†Ê†∑Âºè
function addDragDropStyles() {
    const style = document.createElement('style');
    style.textContent = `
        .drag-highlight {
            background: rgba(102, 126, 234, 0.1) !important;
        }
        
        .drag-highlight::before {
            content: 'üìÅ ÊãñÊãΩÊñá‰ª∂Â§πÂà∞Ê≠§Â§Ñ';
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            background: rgba(0, 0, 0, 0.8);
            color: white;
            padding: 20px 40px;
            border-radius: 12px;
            font-size: 18px;
            font-weight: 600;
            z-index: 10000;
            pointer-events: none;
        }
        
        .empty-state {
            grid-column: 1 / -1;
            text-align: center;
            padding: 60px 20px;
            color: #6c757d;
        }
        
        .empty-icon {
            font-size: 4rem;
            margin-bottom: 20px;
        }
        
        .empty-state h3 {
            font-size: 1.5rem;
            margin-bottom: 10px;
            color: #495057;
        }
        
        .empty-state p {
            margin: 5px 0;
            color: #6c757d;
        }
    `;
    document.head.appendChild(style);
}

// DOMÂä†ËΩΩÂÆåÊàêÂêéÂàùÂßãÂåñÂ∫îÁî®
document.addEventListener('DOMContentLoaded', () => {
    // Ê∑ªÂä†Ê†∑Âºè
    addDragDropStyles();
    
    // ÂàùÂßãÂåñÂ∫îÁî®
    window.gallery = new LocalFolderGallery();
    
    console.log('Êú¨Âú∞Êñá‰ª∂Â§πÁîªÂªäÂ∑≤ÂàùÂßãÂåñÂÆåÊàê');
}); 